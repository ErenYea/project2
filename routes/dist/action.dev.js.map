{"version":3,"sources":["action.js"],"names":["express","require","router","Router","mysqlConnection","post","req","res","next","data","body","arr","array_of_column_name","isNumeric","str","isNaN","task","key","num","parseInt","push","tablename","shift","console","log","huz","join","ham","query","err","rows","fields","send","redirect","value","arr_value","split","update","i","length","module","exports"],"mappings":"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","sourcesContent":["var express = require(\"express\");\r\nvar router = express.Router();\r\nconst mysqlConnection = require(\"./mysqlconn.js\");\r\n\r\n\r\nrouter.post(\"/\", function (req, res,next) {\r\n    var data = req.body;\r\n    var arr = [];\r\n    var array_of_column_name=[];\r\n    function isNumeric(str) {\r\n      if (typeof str != \"string\") return false // we only process strings!  \r\n      return !isNaN(str)  \r\n    }\r\n    var task;\r\n\r\n    for(key in data){\r\n      if (isNumeric(data[key])){\r\n        var num = parseInt(data[key]);\r\n        arr.push(num);\r\n      } else{\r\n        if (key=='task'){\r\n          task=data[key]\r\n          continue;\r\n        }else{\r\n          arr.push(data[key]);\r\n        }\r\n      }\r\n      array_of_column_name.push(key)\r\n    }\r\n    \r\n    var tablename = arr.shift();\r\n    array_of_column_name.shift();\r\n    console.log(arr)\r\n    console.log(array_of_column_name)\r\n    // arr.reverse();\r\n    var huz = \"'\" + arr.join(\"','\") + \"'\";\r\n    var ham = \"\" + array_of_column_name.join(\",\") + \"\";\r\n    if(task=='add'){\r\n      mysqlConnection.query(`insert into ${tablename} (${ham}) values (${huz})`,(err,rows,fields)=>{\r\n        if(err){\r\n            res.send(err)\r\n        } else{\r\n            res.redirect('/tables')\r\n        }\r\n      })\r\n    } else if(task=='edit'){\r\n      value = arr.shift();\r\n      console.log(value);\r\n      arr_value = value.split(\",\");\r\n      array_of_column_name.shift();\r\n      var update=\"\";\r\n      for(var i=0;i<array_of_column_name.length;i++){\r\n        if(i==array_of_column_name.length-1){\r\n          update+=`${array_of_column_name[i]}=`+\"'\"+arr[i]+\"'\";\r\n          break;\r\n        }\r\n        update+=`${array_of_column_name[i]}=`+\"'\"+arr[i]+\"'\"+\",\";\r\n      }\r\n      // res.send(update)\r\n      mysqlConnection.query(`update ${tablename} set ${update} where ${arr_value[0]} = ${arr_value[1]}`,(err,rows,fields)=>{\r\n        if(err){\r\n          res.send(err);\r\n        } else{\r\n          res.redirect('/tables')\r\n        }\r\n      })\r\n\r\n    }\r\n    \r\n    // res.send(ham) ;\r\n    \r\n});\r\n\r\nmodule.exports = router;"],"file":"action.dev.js"}