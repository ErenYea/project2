{"version":3,"sources":["action.js"],"names":["express","require","router","Router","post","req","res","next","mysqlConnection","task","str","body","arr","key","data","array_of_column_name","isNumeric","push","num","parseInt","shift","console","log","huz","join","ham","tablename","query","err","rows","fields","redirect","value","split","i","length","update","concat","arr_value","send","module","exports"],"mappings":"aAAA,IAAIA,QAAUC,QAAQ,WAClBC,OAASF,QAAQG,SADjBH,gBAAkBC,QAAtB,kBAKAC,OAAOE,KAAK,IAAK,SAAUC,EAAKC,EAAIC,GAH9BC,IAOFC,EAHAC,EAJEF,EAAAA,EAAeG,KAKbC,EAAM,GAFPR,EAAoBC,GAUvB,IAAIQ,OAAOC,EAAK,CAJd,GAJF,iBADAJ,EAKgBA,EAAdG,OAHEE,MAAAA,GAKJ,CAOI,GAAS,QAALF,IAAY,CALpBJ,EAAWK,EAAKD,KACVG,SAEEC,EAAJA,KAAAH,EAAAD,UAPF,CACD,IAAAK,EAAAC,SAAAL,EAAAD,MAMGD,EAAIK,KAAKC,GAGPT,EAAAQ,KAAAJ,KAGAD,IAAAA,EAASE,EAAKD,QACfE,EAAAK,QACFC,QAAAC,IAAAV,GAOHS,QAAQC,IAAIP,GALX,IAAAQ,EAAA,IAAAX,EAAAY,KAAA,OAAA,IAQGC,EAAM,GAAKV,EAAqBS,KAAK,KANzC,GAAIE,OAAAA,EACJX,gBAAoBY,MAApBZ,eAAAA,OAAAW,EAAAX,MAAAA,OAAAU,EAAAV,cAAAA,OAAAQ,EAAAR,KAAA,SAAAa,EAAAC,EAAAC,GACQR,EACAA,EAAIP,KAAAA,GAEFT,EAAAyB,SAAUP,kBAEb,GAAP,QAASf,EAAM,CACbD,MAAAA,EAAAA,QACEa,QAAAC,IAAOU,OACH1B,UAASsB,MAATK,MAAA,KACHlB,EAAKK,QAEL,IADGd,IAAAA,EAAIyB,GACPG,EAAA,EAAAA,EAAAnB,EAAAoB,OAAAD,IAAA,CALH,GAAAA,GAAAnB,EAAAoB,OAAA,EAAA,CAOKC,GAAO,GAAAC,OAAEtB,EAAOmB,GAAT,KAAS,IAAAtB,EAAAsB,GAAA,IAChB,MAELI,GAAYN,GAAAA,OAAAA,EAAZE,GAAYF,KAAZ,IAAApB,EAAAsB,GAAA,KAWA1B,gBAAgBmB,MAAhB,UAAAU,OAAgCX,EAAhC,SAAAW,OAAiDD,EAAjD,WAAAC,OAAiEC,UAAU,GAA3E,OAAAD,OAAmFC,UAAU,IAAK,SAACV,EAAIC,EAAKC,GARxGF,EACCM,EAACK,KAAExB,GAEJT,EAAAyB,SAAA,gBAQDS,OAFDC,QAEMvC","file":"action.min.js","sourcesContent":["var express = require(\"express\");\r\nvar router = express.Router();\r\nconst mysqlConnection = require(\"./mysqlconn.js\");\r\n\r\n\r\nrouter.post(\"/\", function (req, res,next) {\r\n    var data = req.body;\r\n    var arr = [];\r\n    var array_of_column_name=[];\r\n    function isNumeric(str) {\r\n      if (typeof str != \"string\") return false // we only process strings!  \r\n      return !isNaN(str)  \r\n    }\r\n    var task;\r\n\r\n    for(key in data){\r\n      if (isNumeric(data[key])){\r\n        var num = parseInt(data[key]);\r\n        arr.push(num);\r\n      } else{\r\n        if (key=='task'){\r\n          task=data[key]\r\n          continue;\r\n        }else{\r\n          arr.push(data[key]);\r\n        }\r\n      }\r\n      array_of_column_name.push(key)\r\n    }\r\n    \r\n    var tablename = arr.shift();\r\n    array_of_column_name.shift();\r\n    console.log(arr)\r\n    console.log(array_of_column_name)\r\n    // arr.reverse();\r\n    var huz = \"'\" + arr.join(\"','\") + \"'\";\r\n    var ham = \"\" + array_of_column_name.join(\",\") + \"\";\r\n    if(task=='add'){\r\n      mysqlConnection.query(`insert into ${tablename} (${ham}) values (${huz})`,(err,rows,fields)=>{\r\n        if(err){\r\n            res.send(err)\r\n        } else{\r\n            res.redirect('/tables')\r\n        }\r\n      })\r\n    } else if(task=='edit'){\r\n      value = arr.shift();\r\n      console.log(value);\r\n      arr_value = value.split(\",\");\r\n      array_of_column_name.shift();\r\n      var update=\"\";\r\n      for(var i=0;i<array_of_column_name.length;i++){\r\n        if(i==array_of_column_name.length-1){\r\n          update+=`${array_of_column_name[i]}=`+\"'\"+arr[i]+\"'\";\r\n          break;\r\n        }\r\n        update+=`${array_of_column_name[i]}=`+\"'\"+arr[i]+\"'\"+\",\";\r\n      }\r\n      // res.send(update)\r\n      mysqlConnection.query(`update ${tablename} set ${update} where ${arr_value[0]} = ${arr_value[1]}`,(err,rows,fields)=>{\r\n        if(err){\r\n          res.send(err);\r\n        } else{\r\n          res.redirect('/tables')\r\n        }\r\n      })\r\n\r\n    }\r\n    \r\n    // res.send(ham) ;\r\n    \r\n});\r\n\r\nmodule.exports = router;"]}