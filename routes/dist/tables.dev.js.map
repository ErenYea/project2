{"version":3,"sources":["tables.js"],"names":["express","require","router","Router","mysqlConnection","get","req","res","next","stat","cookies","console","log","gettablenames","Promise","resolve","reject","query","err","rows","fields","getcolumndata","element","key","allfunct","tablenames","data","array_of_table","user","shift","push","object_of_data","newarr","start","render","title","cond","redirect","module","exports"],"mappings":"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","sourcesContent":["var express = require(\"express\");\nvar router = express.Router();\nconst mysqlConnection = require(\"./mysqlconn.js\");\n\n/* GET users listing. */\nrouter.get(\"/\", function (req, res, next) {\n  var stat = req.cookies.stat;\n  // var stat = require(\"./login\").stat;\n  console.log(stat);\n  if (stat == \"active\") {\n    const gettablenames = () => {\n      return new Promise((resolve, reject) => {\n        mysqlConnection.query(\"show tables\", (err, rows, fields) => {\n          if (err) {\n            console.log(\"First Function\", err);\n            reject(err);\n          } else {\n            resolve(rows);\n          }\n        });\n      });\n    };\n\n    const getcolumndata = (element, key) => {\n      return new Promise((resolve, reject) => {\n        mysqlConnection.query(\n          `SELECT * from ${element[key]}`,\n          (err, rows, fields) => {\n            if (err) {\n              console.log(\"Second function\", err);\n              reject(err);\n            } else {\n              resolve(rows);\n            }\n          }\n        );\n      });\n    };\n    const allfunct = async () => {\n      var tablenames = [];\n      var data = [];\n      var array_of_table = await gettablenames();\n      console.log(array_of_table);\n      if(req.cookies.user!='admin'){\n        array_of_table.shift();\n      }\n      for (element of array_of_table) {\n        for (key in element) {\n          // console.log(element[key]);\n          tablenames.push(element[key]);\n          var object_of_data = await getcolumndata(element, key);\n          data.push(object_of_data);\n        }\n      }\n      var newarr = [tablenames, data];\n      return newarr;\n    };\n    const start = async () => {\n      var newarr = await allfunct();\n      var tablenames = newarr[0];\n      var data = newarr[1];\n      res.render(\"tables\", {\n        title: \"Express\",\n        data: data,\n        tablenames: tablenames,\n        cond: \"table\",\n      });\n    };\n    start();\n  } else {\n    res.redirect(\"/\");\n  }\n});\n\nmodule.exports = router;\n"],"file":"tables.dev.js"}