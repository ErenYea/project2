{"version":3,"sources":["tables.js"],"names":["express","require","router","Router","get","req","res","next","newarr","tablenames","data","mysqlConnection","console","log","stat","resolve","element","key","Promise","reject","query","concat","err","rows","fields","getcolumndata","allfunct","array_of_table","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_iterator","_step","object_of_data","regeneratorRuntime","async","_context","prev","awrap","cookies","sent","user","shift","undefined","Symbol","iterator","done","value","t0","keys","t1","push","t2","finish","abrupt","stop","_context2","render","title","cond","redirect"],"mappings":"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","file":"tables.min.js","sourcesContent":["var express = require(\"express\");\nvar router = express.Router();\nconst mysqlConnection = require(\"./mysqlconn.js\");\n\n/* GET users listing. */\nrouter.get(\"/\", function (req, res, next) {\n  var stat = req.cookies.stat;\n  // var stat = require(\"./login\").stat;\n  console.log(stat);\n  if (stat == \"active\") {\n    const gettablenames = () => {\n      return new Promise((resolve, reject) => {\n        mysqlConnection.query(\"show tables\", (err, rows, fields) => {\n          if (err) {\n            console.log(\"First Function\", err);\n            reject(err);\n          } else {\n            resolve(rows);\n          }\n        });\n      });\n    };\n\n    const getcolumndata = (element, key) => {\n      return new Promise((resolve, reject) => {\n        mysqlConnection.query(\n          `SELECT * from ${element[key]}`,\n          (err, rows, fields) => {\n            if (err) {\n              console.log(\"Second function\", err);\n              reject(err);\n            } else {\n              resolve(rows);\n            }\n          }\n        );\n      });\n    };\n    const allfunct = async () => {\n      var tablenames = [];\n      var data = [];\n      var array_of_table = await gettablenames();\n      console.log(array_of_table);\n      if(req.cookies.user!='admin'){\n        array_of_table.shift();\n      }\n      for (element of array_of_table) {\n        for (key in element) {\n          // console.log(element[key]);\n          tablenames.push(element[key]);\n          var object_of_data = await getcolumndata(element, key);\n          data.push(object_of_data);\n        }\n      }\n      var newarr = [tablenames, data];\n      return newarr;\n    };\n    const start = async () => {\n      var newarr = await allfunct();\n      var tablenames = newarr[0];\n      var data = newarr[1];\n      res.render(\"tables\", {\n        title: \"Express\",\n        data: data,\n        tablenames: tablenames,\n        cond: \"table\",\n      });\n    };\n    start();\n  } else {\n    res.redirect(\"/\");\n  }\n});\n\nmodule.exports = router;\n"]}